{"mappings":"AAAA,MAAMA,EAAQC,GAAKC,SAASC,cAAcF,GAEpCG,EAAUJ,EAAM,kBAChBK,EAASL,EAAM,iBACfM,EAAWN,EAAM,mBAmBvB,SAASO,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CA1BbT,EAAM,SAASiB,iBAAiB,UAAUC,IACxC,IAAIC,GAAWf,EAAQgB,MAEvBF,EAAMG,iBAEN,IAAK,IAAIC,EAAI,EAAGA,GAAKhB,EAASc,MAAOE,GAAK,EACxCf,EAAce,EAAGH,GACdI,MAAKC,IACJC,QAAQC,IAAIF,EAAU,IAEvBG,OAAMC,IACLH,QAAQC,IAAIE,EAAS,IAEzBT,IAAYd,EAAOe,K","sources":["src/js/03-promises.js"],"sourcesContent":["const getEl = x => document.querySelector(x);\n\nconst delayEl = getEl('[name=\"delay\"]');\nconst stepEl = getEl('[name=\"step\"]');\nconst amountEl = getEl('[name=\"amount\"]');\n\ngetEl('.form').addEventListener('submit', event => {\n  let inDelay = +delayEl.value;\n\n  event.preventDefault();\n\n  for (let i = 1; i <= amountEl.value; i += 1) {\n    createPromise(i, inDelay)\n      .then(fulfilled => {\n        console.log(fulfilled);\n      })\n      .catch(rejected => {\n        console.log(rejected);\n      });\n    inDelay += +stepEl.value;\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$47d4ff9957288465$var$getEl","x","document","querySelector","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","inDelay","value","preventDefault","i","then","fulfilled","console","log","catch","rejected"],"version":3,"file":"03-promises.3f098d6e.js.map"}